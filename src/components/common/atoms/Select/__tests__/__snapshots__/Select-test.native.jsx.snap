// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Selectbox component renders correctly 1`] = `
<Styled(View)
  isAddNewCC={false}
>
  <Styled(Styled(BodyCopy))
    accessibilityText=""
    dataLocator=""
    fontSize="fs10"
    fontWeight="extrabold"
    isFocussed={true}
    margin={null}
    numberOfLines={null}
    text="test"
    textDecoration={null}
  />
  <NativeDropDown
    androidPickerStyle={null}
    bottomBorderOnly={true}
    buttonVariation="mobileApp-select"
    data={
      Array [
        Object {
          "displayName": "United States",
          "id": "US",
        },
        Object {
          "displayName": "Canada",
          "id": "CA",
        },
      ]
    }
    disabled={false}
    iconRight={false}
    id="test"
    lightGrayColor={false}
    name="test"
    onValueChange={[Function]}
    pickerStyleObj={Object {}}
    selectedValue="test"
    textAlignLeft={false}
    width="100%"
  />
</Styled(View)>
`;

exports[`Selectbox component renders correctly for error 1`] = `
<Styled(View)
  isAddNewCC={false}
>
  <Styled(Styled(BodyCopy))
    accessibilityText=""
    dataLocator=""
    fontSize="fs10"
    fontWeight="extrabold"
    isFocussed={true}
    margin={null}
    numberOfLines={null}
    text="test"
    textDecoration={null}
  />
  <NativeDropDown
    androidPickerStyle={null}
    bottomBorderOnly={true}
    buttonVariation="mobileApp-select"
    data={
      Array [
        Object {
          "displayName": "United States",
          "id": "US",
        },
        Object {
          "displayName": "Canada",
          "id": "CA",
        },
      ]
    }
    disabled={false}
    iconRight={false}
    id="test"
    lightGrayColor={false}
    name="test"
    onValueChange={[Function]}
    pickerStyleObj={Object {}}
    selectedValue="test"
    textAlignLeft={false}
    width="100%"
  />
  <Styled(View)>
    <Styled(View)
      spacingStyles="margin-right-XS"
    >
      <Styled(ImageComp)
        alt=""
        cacheType="immutable"
        height="14px"
        host=""
        isFastImage={false}
        onError={[Function]}
        onLoadStart={[Function]}
        onProgress={[Function]}
        priority="normal"
        resizeMode="contain"
        source={
          Object {
            "testUri": "../../../src/assets/images/alert-triangle.png",
          }
        }
        url=""
        width="16px"
      />
    </Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="error"
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs12"
      fontWeight="extrabold"
      margin={null}
      numberOfLines={null}
      text="error message"
      textDecoration={null}
    />
  </Styled(View)>
</Styled(View)>
`;
